// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package flyio

import (
	"context"
	"reflect"

	"github.com/lukeshay/pulumi-flyio/sdk/go/flyio/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets the state of a Fly.io app.
func LookupApp(ctx *pulumi.Context, args *LookupAppArgs, opts ...pulumi.InvokeOption) (*LookupAppResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAppResult
	err := ctx.Invoke("flyio:index:getApp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAppArgs struct {
	// The name of the app.
	Name string `pulumi:"name"`
}

type LookupAppResult struct {
	FlyId  string `pulumi:"flyId"`
	Name   string `pulumi:"name"`
	Org    string `pulumi:"org"`
	Status string `pulumi:"status"`
}

func LookupAppOutput(ctx *pulumi.Context, args LookupAppOutputArgs, opts ...pulumi.InvokeOption) LookupAppResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAppResultOutput, error) {
			args := v.(LookupAppArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupAppResult
			secret, err := ctx.InvokePackageRaw("flyio:index:getApp", args, &rv, "", opts...)
			if err != nil {
				return LookupAppResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupAppResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupAppResultOutput), nil
			}
			return output, nil
		}).(LookupAppResultOutput)
}

type LookupAppOutputArgs struct {
	// The name of the app.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupAppOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppArgs)(nil)).Elem()
}

type LookupAppResultOutput struct{ *pulumi.OutputState }

func (LookupAppResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppResult)(nil)).Elem()
}

func (o LookupAppResultOutput) ToLookupAppResultOutput() LookupAppResultOutput {
	return o
}

func (o LookupAppResultOutput) ToLookupAppResultOutputWithContext(ctx context.Context) LookupAppResultOutput {
	return o
}

func (o LookupAppResultOutput) FlyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppResult) string { return v.FlyId }).(pulumi.StringOutput)
}

func (o LookupAppResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupAppResultOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppResult) string { return v.Org }).(pulumi.StringOutput)
}

func (o LookupAppResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppResultOutput{})
}
