// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlyEnvFromArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlyEnvFromArgs Empty = new FlyEnvFromArgs();

    @Import(name="envVar")
    private @Nullable Output<String> envVar;

    public Optional<Output<String>> envVar() {
        return Optional.ofNullable(this.envVar);
    }

    @Import(name="fieldRef")
    private @Nullable Output<String> fieldRef;

    public Optional<Output<String>> fieldRef() {
        return Optional.ofNullable(this.fieldRef);
    }

    private FlyEnvFromArgs() {}

    private FlyEnvFromArgs(FlyEnvFromArgs $) {
        this.envVar = $.envVar;
        this.fieldRef = $.fieldRef;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlyEnvFromArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlyEnvFromArgs $;

        public Builder() {
            $ = new FlyEnvFromArgs();
        }

        public Builder(FlyEnvFromArgs defaults) {
            $ = new FlyEnvFromArgs(Objects.requireNonNull(defaults));
        }

        public Builder envVar(@Nullable Output<String> envVar) {
            $.envVar = envVar;
            return this;
        }

        public Builder envVar(String envVar) {
            return envVar(Output.of(envVar));
        }

        public Builder fieldRef(@Nullable Output<String> fieldRef) {
            $.fieldRef = fieldRef;
            return this;
        }

        public Builder fieldRef(String fieldRef) {
            return fieldRef(Output.of(fieldRef));
        }

        public FlyEnvFromArgs build() {
            return $;
        }
    }

}
