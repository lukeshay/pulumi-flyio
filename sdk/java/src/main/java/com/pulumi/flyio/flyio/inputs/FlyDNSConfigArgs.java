// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.flyio.flyio.inputs.FlyDnsForwardRuleArgs;
import com.pulumi.flyio.flyio.inputs.FlyDnsOptionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlyDNSConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlyDNSConfigArgs Empty = new FlyDNSConfigArgs();

    @Import(name="dnsForwardRules")
    private @Nullable Output<List<FlyDnsForwardRuleArgs>> dnsForwardRules;

    public Optional<Output<List<FlyDnsForwardRuleArgs>>> dnsForwardRules() {
        return Optional.ofNullable(this.dnsForwardRules);
    }

    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    @Import(name="hostnameFqdn")
    private @Nullable Output<String> hostnameFqdn;

    public Optional<Output<String>> hostnameFqdn() {
        return Optional.ofNullable(this.hostnameFqdn);
    }

    @Import(name="nameservers")
    private @Nullable Output<List<String>> nameservers;

    public Optional<Output<List<String>>> nameservers() {
        return Optional.ofNullable(this.nameservers);
    }

    @Import(name="options")
    private @Nullable Output<List<FlyDnsOptionArgs>> options;

    public Optional<Output<List<FlyDnsOptionArgs>>> options() {
        return Optional.ofNullable(this.options);
    }

    @Import(name="searches")
    private @Nullable Output<List<String>> searches;

    public Optional<Output<List<String>>> searches() {
        return Optional.ofNullable(this.searches);
    }

    @Import(name="skipRegistration")
    private @Nullable Output<Boolean> skipRegistration;

    public Optional<Output<Boolean>> skipRegistration() {
        return Optional.ofNullable(this.skipRegistration);
    }

    private FlyDNSConfigArgs() {}

    private FlyDNSConfigArgs(FlyDNSConfigArgs $) {
        this.dnsForwardRules = $.dnsForwardRules;
        this.hostname = $.hostname;
        this.hostnameFqdn = $.hostnameFqdn;
        this.nameservers = $.nameservers;
        this.options = $.options;
        this.searches = $.searches;
        this.skipRegistration = $.skipRegistration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlyDNSConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlyDNSConfigArgs $;

        public Builder() {
            $ = new FlyDNSConfigArgs();
        }

        public Builder(FlyDNSConfigArgs defaults) {
            $ = new FlyDNSConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder dnsForwardRules(@Nullable Output<List<FlyDnsForwardRuleArgs>> dnsForwardRules) {
            $.dnsForwardRules = dnsForwardRules;
            return this;
        }

        public Builder dnsForwardRules(List<FlyDnsForwardRuleArgs> dnsForwardRules) {
            return dnsForwardRules(Output.of(dnsForwardRules));
        }

        public Builder dnsForwardRules(FlyDnsForwardRuleArgs... dnsForwardRules) {
            return dnsForwardRules(List.of(dnsForwardRules));
        }

        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        public Builder hostnameFqdn(@Nullable Output<String> hostnameFqdn) {
            $.hostnameFqdn = hostnameFqdn;
            return this;
        }

        public Builder hostnameFqdn(String hostnameFqdn) {
            return hostnameFqdn(Output.of(hostnameFqdn));
        }

        public Builder nameservers(@Nullable Output<List<String>> nameservers) {
            $.nameservers = nameservers;
            return this;
        }

        public Builder nameservers(List<String> nameservers) {
            return nameservers(Output.of(nameservers));
        }

        public Builder nameservers(String... nameservers) {
            return nameservers(List.of(nameservers));
        }

        public Builder options(@Nullable Output<List<FlyDnsOptionArgs>> options) {
            $.options = options;
            return this;
        }

        public Builder options(List<FlyDnsOptionArgs> options) {
            return options(Output.of(options));
        }

        public Builder options(FlyDnsOptionArgs... options) {
            return options(List.of(options));
        }

        public Builder searches(@Nullable Output<List<String>> searches) {
            $.searches = searches;
            return this;
        }

        public Builder searches(List<String> searches) {
            return searches(Output.of(searches));
        }

        public Builder searches(String... searches) {
            return searches(List.of(searches));
        }

        public Builder skipRegistration(@Nullable Output<Boolean> skipRegistration) {
            $.skipRegistration = skipRegistration;
            return this;
        }

        public Builder skipRegistration(Boolean skipRegistration) {
            return skipRegistration(Output.of(skipRegistration));
        }

        public FlyDNSConfigArgs build() {
            return $;
        }
    }

}
