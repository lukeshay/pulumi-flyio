// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class SecretsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretsArgs Empty = new SecretsArgs();

    /**
     * The Fly.io application to set secrets for.
     * 
     */
    @Import(name="app", required=true)
    private Output<String> app;

    /**
     * @return The Fly.io application to set secrets for.
     * 
     */
    public Output<String> app() {
        return this.app;
    }

    /**
     * The secret values to set, as key-value pairs.
     * 
     */
    @Import(name="values", required=true)
    private Output<Map<String,String>> values;

    /**
     * @return The secret values to set, as key-value pairs.
     * 
     */
    public Output<Map<String,String>> values() {
        return this.values;
    }

    private SecretsArgs() {}

    private SecretsArgs(SecretsArgs $) {
        this.app = $.app;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretsArgs $;

        public Builder() {
            $ = new SecretsArgs();
        }

        public Builder(SecretsArgs defaults) {
            $ = new SecretsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param app The Fly.io application to set secrets for.
         * 
         * @return builder
         * 
         */
        public Builder app(Output<String> app) {
            $.app = app;
            return this;
        }

        /**
         * @param app The Fly.io application to set secrets for.
         * 
         * @return builder
         * 
         */
        public Builder app(String app) {
            return app(Output.of(app));
        }

        /**
         * @param values The secret values to set, as key-value pairs.
         * 
         * @return builder
         * 
         */
        public Builder values(Output<Map<String,String>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values The secret values to set, as key-value pairs.
         * 
         * @return builder
         * 
         */
        public Builder values(Map<String,String> values) {
            return values(Output.of(values));
        }

        public SecretsArgs build() {
            if ($.app == null) {
                throw new MissingRequiredPropertyException("SecretsArgs", "app");
            }
            if ($.values == null) {
                throw new MissingRequiredPropertyException("SecretsArgs", "values");
            }
            return $;
        }
    }

}
