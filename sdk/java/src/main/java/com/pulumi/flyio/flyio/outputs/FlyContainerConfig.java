// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.flyio.flyio.outputs.FlyContainerDependency;
import com.pulumi.flyio.flyio.outputs.FlyContainerHealthcheck;
import com.pulumi.flyio.flyio.outputs.FlyContainerMount;
import com.pulumi.flyio.flyio.outputs.FlyEnvFrom;
import com.pulumi.flyio.flyio.outputs.FlyFile;
import com.pulumi.flyio.flyio.outputs.FlyMachineRestart;
import com.pulumi.flyio.flyio.outputs.FlyMachineSecret;
import com.pulumi.flyio.flyio.outputs.FlyStopConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlyContainerConfig {
    private @Nullable List<String> cmd;
    private @Nullable List<FlyContainerDependency> dependsOn;
    private @Nullable List<String> entrypoint;
    private @Nullable Map<String,String> env;
    private @Nullable List<FlyEnvFrom> envFrom;
    private @Nullable List<String> exec;
    private @Nullable List<FlyFile> files;
    private @Nullable List<FlyContainerHealthcheck> healthchecks;
    private @Nullable String image;
    private @Nullable List<FlyContainerMount> mounts;
    private @Nullable String name;
    private @Nullable FlyMachineRestart restart;
    private @Nullable List<FlyMachineSecret> secrets;
    private @Nullable FlyStopConfig stop;
    private @Nullable String user;

    private FlyContainerConfig() {}
    public List<String> cmd() {
        return this.cmd == null ? List.of() : this.cmd;
    }
    public List<FlyContainerDependency> dependsOn() {
        return this.dependsOn == null ? List.of() : this.dependsOn;
    }
    public List<String> entrypoint() {
        return this.entrypoint == null ? List.of() : this.entrypoint;
    }
    public Map<String,String> env() {
        return this.env == null ? Map.of() : this.env;
    }
    public List<FlyEnvFrom> envFrom() {
        return this.envFrom == null ? List.of() : this.envFrom;
    }
    public List<String> exec() {
        return this.exec == null ? List.of() : this.exec;
    }
    public List<FlyFile> files() {
        return this.files == null ? List.of() : this.files;
    }
    public List<FlyContainerHealthcheck> healthchecks() {
        return this.healthchecks == null ? List.of() : this.healthchecks;
    }
    public Optional<String> image() {
        return Optional.ofNullable(this.image);
    }
    public List<FlyContainerMount> mounts() {
        return this.mounts == null ? List.of() : this.mounts;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<FlyMachineRestart> restart() {
        return Optional.ofNullable(this.restart);
    }
    public List<FlyMachineSecret> secrets() {
        return this.secrets == null ? List.of() : this.secrets;
    }
    public Optional<FlyStopConfig> stop() {
        return Optional.ofNullable(this.stop);
    }
    public Optional<String> user() {
        return Optional.ofNullable(this.user);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlyContainerConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> cmd;
        private @Nullable List<FlyContainerDependency> dependsOn;
        private @Nullable List<String> entrypoint;
        private @Nullable Map<String,String> env;
        private @Nullable List<FlyEnvFrom> envFrom;
        private @Nullable List<String> exec;
        private @Nullable List<FlyFile> files;
        private @Nullable List<FlyContainerHealthcheck> healthchecks;
        private @Nullable String image;
        private @Nullable List<FlyContainerMount> mounts;
        private @Nullable String name;
        private @Nullable FlyMachineRestart restart;
        private @Nullable List<FlyMachineSecret> secrets;
        private @Nullable FlyStopConfig stop;
        private @Nullable String user;
        public Builder() {}
        public Builder(FlyContainerConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cmd = defaults.cmd;
    	      this.dependsOn = defaults.dependsOn;
    	      this.entrypoint = defaults.entrypoint;
    	      this.env = defaults.env;
    	      this.envFrom = defaults.envFrom;
    	      this.exec = defaults.exec;
    	      this.files = defaults.files;
    	      this.healthchecks = defaults.healthchecks;
    	      this.image = defaults.image;
    	      this.mounts = defaults.mounts;
    	      this.name = defaults.name;
    	      this.restart = defaults.restart;
    	      this.secrets = defaults.secrets;
    	      this.stop = defaults.stop;
    	      this.user = defaults.user;
        }

        @CustomType.Setter
        public Builder cmd(@Nullable List<String> cmd) {

            this.cmd = cmd;
            return this;
        }
        public Builder cmd(String... cmd) {
            return cmd(List.of(cmd));
        }
        @CustomType.Setter
        public Builder dependsOn(@Nullable List<FlyContainerDependency> dependsOn) {

            this.dependsOn = dependsOn;
            return this;
        }
        public Builder dependsOn(FlyContainerDependency... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }
        @CustomType.Setter
        public Builder entrypoint(@Nullable List<String> entrypoint) {

            this.entrypoint = entrypoint;
            return this;
        }
        public Builder entrypoint(String... entrypoint) {
            return entrypoint(List.of(entrypoint));
        }
        @CustomType.Setter
        public Builder env(@Nullable Map<String,String> env) {

            this.env = env;
            return this;
        }
        @CustomType.Setter
        public Builder envFrom(@Nullable List<FlyEnvFrom> envFrom) {

            this.envFrom = envFrom;
            return this;
        }
        public Builder envFrom(FlyEnvFrom... envFrom) {
            return envFrom(List.of(envFrom));
        }
        @CustomType.Setter
        public Builder exec(@Nullable List<String> exec) {

            this.exec = exec;
            return this;
        }
        public Builder exec(String... exec) {
            return exec(List.of(exec));
        }
        @CustomType.Setter
        public Builder files(@Nullable List<FlyFile> files) {

            this.files = files;
            return this;
        }
        public Builder files(FlyFile... files) {
            return files(List.of(files));
        }
        @CustomType.Setter
        public Builder healthchecks(@Nullable List<FlyContainerHealthcheck> healthchecks) {

            this.healthchecks = healthchecks;
            return this;
        }
        public Builder healthchecks(FlyContainerHealthcheck... healthchecks) {
            return healthchecks(List.of(healthchecks));
        }
        @CustomType.Setter
        public Builder image(@Nullable String image) {

            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder mounts(@Nullable List<FlyContainerMount> mounts) {

            this.mounts = mounts;
            return this;
        }
        public Builder mounts(FlyContainerMount... mounts) {
            return mounts(List.of(mounts));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder restart(@Nullable FlyMachineRestart restart) {

            this.restart = restart;
            return this;
        }
        @CustomType.Setter
        public Builder secrets(@Nullable List<FlyMachineSecret> secrets) {

            this.secrets = secrets;
            return this;
        }
        public Builder secrets(FlyMachineSecret... secrets) {
            return secrets(List.of(secrets));
        }
        @CustomType.Setter
        public Builder stop(@Nullable FlyStopConfig stop) {

            this.stop = stop;
            return this;
        }
        @CustomType.Setter
        public Builder user(@Nullable String user) {

            this.user = user;
            return this;
        }
        public FlyContainerConfig build() {
            final var _resultValue = new FlyContainerConfig();
            _resultValue.cmd = cmd;
            _resultValue.dependsOn = dependsOn;
            _resultValue.entrypoint = entrypoint;
            _resultValue.env = env;
            _resultValue.envFrom = envFrom;
            _resultValue.exec = exec;
            _resultValue.files = files;
            _resultValue.healthchecks = healthchecks;
            _resultValue.image = image;
            _resultValue.mounts = mounts;
            _resultValue.name = name;
            _resultValue.restart = restart;
            _resultValue.secrets = secrets;
            _resultValue.stop = stop;
            _resultValue.user = user;
            return _resultValue;
        }
    }
}
