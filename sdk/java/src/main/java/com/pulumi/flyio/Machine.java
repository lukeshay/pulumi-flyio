// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.flyio.Utilities;
import com.pulumi.flyio.flyio.outputs.CheckStatus;
import com.pulumi.flyio.flyio.outputs.FlyMachineConfig;
import com.pulumi.flyio.flyio.outputs.ImageRef;
import com.pulumi.flyio.flyio.outputs.MachineEvent;
import com.pulumi.flyio.outputs.MachineArgs;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Fly.io machine represents a VM instance that runs your application.
 * 
 */
@ResourceType(type="flyio:index:Machine")
public class Machine extends com.pulumi.resources.CustomResource {
    /**
     * The Fly.io application the machine belongs to.
     * 
     */
    @Export(name="app", refs={String.class}, tree="[0]")
    private Output<String> app;

    /**
     * @return The Fly.io application the machine belongs to.
     * 
     */
    public Output<String> app() {
        return this.app;
    }
    @Export(name="checks", refs={List.class,CheckStatus.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CheckStatus>> checks;

    public Output<Optional<List<CheckStatus>>> checks() {
        return Codegen.optional(this.checks);
    }
    @Export(name="config", refs={FlyMachineConfig.class}, tree="[0]")
    private Output<FlyMachineConfig> config;

    public Output<FlyMachineConfig> config() {
        return this.config;
    }
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> createdAt;

    public Output<Optional<String>> createdAt() {
        return Codegen.optional(this.createdAt);
    }
    /**
     * The deployment strategy used for the machine.
     * 
     */
    @Export(name="deploymentStrategy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deploymentStrategy;

    /**
     * @return The deployment strategy used for the machine.
     * 
     */
    public Output<Optional<String>> deploymentStrategy() {
        return Codegen.optional(this.deploymentStrategy);
    }
    @Export(name="events", refs={List.class,MachineEvent.class}, tree="[0,1]")
    private Output</* @Nullable */ List<MachineEvent>> events;

    public Output<Optional<List<MachineEvent>>> events() {
        return Codegen.optional(this.events);
    }
    @Export(name="flyId", refs={String.class}, tree="[0]")
    private Output<String> flyId;

    public Output<String> flyId() {
        return this.flyId;
    }
    @Export(name="hostStatus", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> hostStatus;

    public Output<Optional<String>> hostStatus() {
        return Codegen.optional(this.hostStatus);
    }
    @Export(name="imageRef", refs={ImageRef.class}, tree="[0]")
    private Output</* @Nullable */ ImageRef> imageRef;

    public Output<Optional<ImageRef>> imageRef() {
        return Codegen.optional(this.imageRef);
    }
    @Export(name="incompleteConfig", refs={FlyMachineConfig.class}, tree="[0]")
    private Output</* @Nullable */ FlyMachineConfig> incompleteConfig;

    public Output<Optional<FlyMachineConfig>> incompleteConfig() {
        return Codegen.optional(this.incompleteConfig);
    }
    /**
     * The input arguments used to create the machine.
     * 
     */
    @Export(name="input", refs={MachineArgs.class}, tree="[0]")
    private Output<MachineArgs> input;

    /**
     * @return The input arguments used to create the machine.
     * 
     */
    public Output<MachineArgs> input() {
        return this.input;
    }
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> instanceId;

    public Output<Optional<String>> instanceId() {
        return Codegen.optional(this.instanceId);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="nonce", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> nonce;

    public Output<Optional<String>> nonce() {
        return Codegen.optional(this.nonce);
    }
    @Export(name="privateIp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> privateIp;

    public Output<Optional<String>> privateIp() {
        return Codegen.optional(this.privateIp);
    }
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> region;

    public Output<Optional<String>> region() {
        return Codegen.optional(this.region);
    }
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    public Output<String> state() {
        return this.state;
    }
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> updatedAt;

    public Output<Optional<String>> updatedAt() {
        return Codegen.optional(this.updatedAt);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Machine(java.lang.String name) {
        this(name, com.pulumi.flyio.MachineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Machine(java.lang.String name, com.pulumi.flyio.MachineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Machine(java.lang.String name, com.pulumi.flyio.MachineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("flyio:index:Machine", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Machine(java.lang.String name, Output<java.lang.String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("flyio:index:Machine", name, null, makeResourceOptions(options, id), false);
    }

    private static com.pulumi.flyio.MachineArgs makeArgs(com.pulumi.flyio.MachineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? com.pulumi.flyio.MachineArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Machine get(java.lang.String name, Output<java.lang.String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Machine(name, id, options);
    }
}
