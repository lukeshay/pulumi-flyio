// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.flyio.flyio.inputs.FlyExecHealthcheckArgs;
import com.pulumi.flyio.flyio.inputs.FlyHTTPHealthcheckArgs;
import com.pulumi.flyio.flyio.inputs.FlyTCPHealthcheckArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlyContainerHealthcheckArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlyContainerHealthcheckArgs Empty = new FlyContainerHealthcheckArgs();

    @Import(name="exec")
    private @Nullable Output<FlyExecHealthcheckArgs> exec;

    public Optional<Output<FlyExecHealthcheckArgs>> exec() {
        return Optional.ofNullable(this.exec);
    }

    @Import(name="failureThreshold")
    private @Nullable Output<Integer> failureThreshold;

    public Optional<Output<Integer>> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }

    @Import(name="gracePeriod")
    private @Nullable Output<Integer> gracePeriod;

    public Optional<Output<Integer>> gracePeriod() {
        return Optional.ofNullable(this.gracePeriod);
    }

    @Import(name="http")
    private @Nullable Output<FlyHTTPHealthcheckArgs> http;

    public Optional<Output<FlyHTTPHealthcheckArgs>> http() {
        return Optional.ofNullable(this.http);
    }

    @Import(name="interval")
    private @Nullable Output<Integer> interval;

    public Optional<Output<Integer>> interval() {
        return Optional.ofNullable(this.interval);
    }

    @Import(name="kind")
    private @Nullable Output<String> kind;

    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="successThreshold")
    private @Nullable Output<Integer> successThreshold;

    public Optional<Output<Integer>> successThreshold() {
        return Optional.ofNullable(this.successThreshold);
    }

    @Import(name="tcp")
    private @Nullable Output<FlyTCPHealthcheckArgs> tcp;

    public Optional<Output<FlyTCPHealthcheckArgs>> tcp() {
        return Optional.ofNullable(this.tcp);
    }

    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    @Import(name="unhealthy")
    private @Nullable Output<String> unhealthy;

    public Optional<Output<String>> unhealthy() {
        return Optional.ofNullable(this.unhealthy);
    }

    private FlyContainerHealthcheckArgs() {}

    private FlyContainerHealthcheckArgs(FlyContainerHealthcheckArgs $) {
        this.exec = $.exec;
        this.failureThreshold = $.failureThreshold;
        this.gracePeriod = $.gracePeriod;
        this.http = $.http;
        this.interval = $.interval;
        this.kind = $.kind;
        this.name = $.name;
        this.successThreshold = $.successThreshold;
        this.tcp = $.tcp;
        this.timeout = $.timeout;
        this.unhealthy = $.unhealthy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlyContainerHealthcheckArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlyContainerHealthcheckArgs $;

        public Builder() {
            $ = new FlyContainerHealthcheckArgs();
        }

        public Builder(FlyContainerHealthcheckArgs defaults) {
            $ = new FlyContainerHealthcheckArgs(Objects.requireNonNull(defaults));
        }

        public Builder exec(@Nullable Output<FlyExecHealthcheckArgs> exec) {
            $.exec = exec;
            return this;
        }

        public Builder exec(FlyExecHealthcheckArgs exec) {
            return exec(Output.of(exec));
        }

        public Builder failureThreshold(@Nullable Output<Integer> failureThreshold) {
            $.failureThreshold = failureThreshold;
            return this;
        }

        public Builder failureThreshold(Integer failureThreshold) {
            return failureThreshold(Output.of(failureThreshold));
        }

        public Builder gracePeriod(@Nullable Output<Integer> gracePeriod) {
            $.gracePeriod = gracePeriod;
            return this;
        }

        public Builder gracePeriod(Integer gracePeriod) {
            return gracePeriod(Output.of(gracePeriod));
        }

        public Builder http(@Nullable Output<FlyHTTPHealthcheckArgs> http) {
            $.http = http;
            return this;
        }

        public Builder http(FlyHTTPHealthcheckArgs http) {
            return http(Output.of(http));
        }

        public Builder interval(@Nullable Output<Integer> interval) {
            $.interval = interval;
            return this;
        }

        public Builder interval(Integer interval) {
            return interval(Output.of(interval));
        }

        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder successThreshold(@Nullable Output<Integer> successThreshold) {
            $.successThreshold = successThreshold;
            return this;
        }

        public Builder successThreshold(Integer successThreshold) {
            return successThreshold(Output.of(successThreshold));
        }

        public Builder tcp(@Nullable Output<FlyTCPHealthcheckArgs> tcp) {
            $.tcp = tcp;
            return this;
        }

        public Builder tcp(FlyTCPHealthcheckArgs tcp) {
            return tcp(Output.of(tcp));
        }

        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        public Builder unhealthy(@Nullable Output<String> unhealthy) {
            $.unhealthy = unhealthy;
            return this;
        }

        public Builder unhealthy(String unhealthy) {
            return unhealthy(Output.of(unhealthy));
        }

        public FlyContainerHealthcheckArgs build() {
            return $;
        }
    }

}
