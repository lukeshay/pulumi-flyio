// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.flyio.flyio.inputs.FlyTempDirVolumeArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlyVolumeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlyVolumeConfigArgs Empty = new FlyVolumeConfigArgs();

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="tempDir")
    private @Nullable Output<FlyTempDirVolumeArgs> tempDir;

    public Optional<Output<FlyTempDirVolumeArgs>> tempDir() {
        return Optional.ofNullable(this.tempDir);
    }

    private FlyVolumeConfigArgs() {}

    private FlyVolumeConfigArgs(FlyVolumeConfigArgs $) {
        this.name = $.name;
        this.tempDir = $.tempDir;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlyVolumeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlyVolumeConfigArgs $;

        public Builder() {
            $ = new FlyVolumeConfigArgs();
        }

        public Builder(FlyVolumeConfigArgs defaults) {
            $ = new FlyVolumeConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder tempDir(@Nullable Output<FlyTempDirVolumeArgs> tempDir) {
            $.tempDir = tempDir;
            return this;
        }

        public Builder tempDir(FlyTempDirVolumeArgs tempDir) {
            return tempDir(Output.of(tempDir));
        }

        public FlyVolumeConfigArgs build() {
            return $;
        }
    }

}
