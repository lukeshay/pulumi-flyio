// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.flyio.flyio.outputs.FlyMachineConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MachineArgs {
    private String app;
    private FlyMachineConfig config;
    private @Nullable String deploymentStrategy;
    private @Nullable Integer leaseTtl;
    private @Nullable Boolean lsvd;
    private @Nullable String name;
    private @Nullable String region;
    private @Nullable Boolean skipLaunch;
    private @Nullable Boolean skipServiceRegistration;

    private MachineArgs() {}
    public String app() {
        return this.app;
    }
    public FlyMachineConfig config() {
        return this.config;
    }
    public Optional<String> deploymentStrategy() {
        return Optional.ofNullable(this.deploymentStrategy);
    }
    public Optional<Integer> leaseTtl() {
        return Optional.ofNullable(this.leaseTtl);
    }
    public Optional<Boolean> lsvd() {
        return Optional.ofNullable(this.lsvd);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public Optional<Boolean> skipLaunch() {
        return Optional.ofNullable(this.skipLaunch);
    }
    public Optional<Boolean> skipServiceRegistration() {
        return Optional.ofNullable(this.skipServiceRegistration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MachineArgs defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String app;
        private FlyMachineConfig config;
        private @Nullable String deploymentStrategy;
        private @Nullable Integer leaseTtl;
        private @Nullable Boolean lsvd;
        private @Nullable String name;
        private @Nullable String region;
        private @Nullable Boolean skipLaunch;
        private @Nullable Boolean skipServiceRegistration;
        public Builder() {}
        public Builder(MachineArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.app = defaults.app;
    	      this.config = defaults.config;
    	      this.deploymentStrategy = defaults.deploymentStrategy;
    	      this.leaseTtl = defaults.leaseTtl;
    	      this.lsvd = defaults.lsvd;
    	      this.name = defaults.name;
    	      this.region = defaults.region;
    	      this.skipLaunch = defaults.skipLaunch;
    	      this.skipServiceRegistration = defaults.skipServiceRegistration;
        }

        @CustomType.Setter
        public Builder app(String app) {
            if (app == null) {
              throw new MissingRequiredPropertyException("MachineArgs", "app");
            }
            this.app = app;
            return this;
        }
        @CustomType.Setter
        public Builder config(FlyMachineConfig config) {
            if (config == null) {
              throw new MissingRequiredPropertyException("MachineArgs", "config");
            }
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentStrategy(@Nullable String deploymentStrategy) {

            this.deploymentStrategy = deploymentStrategy;
            return this;
        }
        @CustomType.Setter
        public Builder leaseTtl(@Nullable Integer leaseTtl) {

            this.leaseTtl = leaseTtl;
            return this;
        }
        @CustomType.Setter
        public Builder lsvd(@Nullable Boolean lsvd) {

            this.lsvd = lsvd;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder skipLaunch(@Nullable Boolean skipLaunch) {

            this.skipLaunch = skipLaunch;
            return this;
        }
        @CustomType.Setter
        public Builder skipServiceRegistration(@Nullable Boolean skipServiceRegistration) {

            this.skipServiceRegistration = skipServiceRegistration;
            return this;
        }
        public MachineArgs build() {
            final var _resultValue = new MachineArgs();
            _resultValue.app = app;
            _resultValue.config = config;
            _resultValue.deploymentStrategy = deploymentStrategy;
            _resultValue.leaseTtl = leaseTtl;
            _resultValue.lsvd = lsvd;
            _resultValue.name = name;
            _resultValue.region = region;
            _resultValue.skipLaunch = skipLaunch;
            _resultValue.skipServiceRegistration = skipServiceRegistration;
            return _resultValue;
        }
    }
}
