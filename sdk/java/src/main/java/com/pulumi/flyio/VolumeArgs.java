// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.flyio.flyio.inputs.FlyMachineGuestArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeArgs Empty = new VolumeArgs();

    /**
     * The Fly.io application to attach the volume to.
     * 
     */
    @Import(name="app", required=true)
    private Output<String> app;

    /**
     * @return The Fly.io application to attach the volume to.
     * 
     */
    public Output<String> app() {
        return this.app;
    }

    /**
     * Whether to enable automatic backups for the volume.
     * 
     */
    @Import(name="autoBackupEnabled")
    private @Nullable Output<Boolean> autoBackupEnabled;

    /**
     * @return Whether to enable automatic backups for the volume.
     * 
     */
    public Optional<Output<Boolean>> autoBackupEnabled() {
        return Optional.ofNullable(this.autoBackupEnabled);
    }

    @Import(name="compute")
    private @Nullable Output<FlyMachineGuestArgs> compute;

    public Optional<Output<FlyMachineGuestArgs>> compute() {
        return Optional.ofNullable(this.compute);
    }

    @Import(name="computeImage")
    private @Nullable Output<String> computeImage;

    public Optional<Output<String>> computeImage() {
        return Optional.ofNullable(this.computeImage);
    }

    @Import(name="encrypted")
    private @Nullable Output<Boolean> encrypted;

    public Optional<Output<Boolean>> encrypted() {
        return Optional.ofNullable(this.encrypted);
    }

    @Import(name="fstype")
    private @Nullable Output<String> fstype;

    public Optional<Output<String>> fstype() {
        return Optional.ofNullable(this.fstype);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="requireUniqueZone")
    private @Nullable Output<Boolean> requireUniqueZone;

    public Optional<Output<Boolean>> requireUniqueZone() {
        return Optional.ofNullable(this.requireUniqueZone);
    }

    @Import(name="sizeGb")
    private @Nullable Output<Integer> sizeGb;

    public Optional<Output<Integer>> sizeGb() {
        return Optional.ofNullable(this.sizeGb);
    }

    @Import(name="snapshotId")
    private @Nullable Output<String> snapshotId;

    public Optional<Output<String>> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }

    @Import(name="snapshotRetention")
    private @Nullable Output<Integer> snapshotRetention;

    public Optional<Output<Integer>> snapshotRetention() {
        return Optional.ofNullable(this.snapshotRetention);
    }

    @Import(name="sourceVolumeId")
    private @Nullable Output<String> sourceVolumeId;

    public Optional<Output<String>> sourceVolumeId() {
        return Optional.ofNullable(this.sourceVolumeId);
    }

    @Import(name="uniqueZoneAppWide")
    private @Nullable Output<Boolean> uniqueZoneAppWide;

    public Optional<Output<Boolean>> uniqueZoneAppWide() {
        return Optional.ofNullable(this.uniqueZoneAppWide);
    }

    private VolumeArgs() {}

    private VolumeArgs(VolumeArgs $) {
        this.app = $.app;
        this.autoBackupEnabled = $.autoBackupEnabled;
        this.compute = $.compute;
        this.computeImage = $.computeImage;
        this.encrypted = $.encrypted;
        this.fstype = $.fstype;
        this.name = $.name;
        this.region = $.region;
        this.requireUniqueZone = $.requireUniqueZone;
        this.sizeGb = $.sizeGb;
        this.snapshotId = $.snapshotId;
        this.snapshotRetention = $.snapshotRetention;
        this.sourceVolumeId = $.sourceVolumeId;
        this.uniqueZoneAppWide = $.uniqueZoneAppWide;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeArgs $;

        public Builder() {
            $ = new VolumeArgs();
        }

        public Builder(VolumeArgs defaults) {
            $ = new VolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param app The Fly.io application to attach the volume to.
         * 
         * @return builder
         * 
         */
        public Builder app(Output<String> app) {
            $.app = app;
            return this;
        }

        /**
         * @param app The Fly.io application to attach the volume to.
         * 
         * @return builder
         * 
         */
        public Builder app(String app) {
            return app(Output.of(app));
        }

        /**
         * @param autoBackupEnabled Whether to enable automatic backups for the volume.
         * 
         * @return builder
         * 
         */
        public Builder autoBackupEnabled(@Nullable Output<Boolean> autoBackupEnabled) {
            $.autoBackupEnabled = autoBackupEnabled;
            return this;
        }

        /**
         * @param autoBackupEnabled Whether to enable automatic backups for the volume.
         * 
         * @return builder
         * 
         */
        public Builder autoBackupEnabled(Boolean autoBackupEnabled) {
            return autoBackupEnabled(Output.of(autoBackupEnabled));
        }

        public Builder compute(@Nullable Output<FlyMachineGuestArgs> compute) {
            $.compute = compute;
            return this;
        }

        public Builder compute(FlyMachineGuestArgs compute) {
            return compute(Output.of(compute));
        }

        public Builder computeImage(@Nullable Output<String> computeImage) {
            $.computeImage = computeImage;
            return this;
        }

        public Builder computeImage(String computeImage) {
            return computeImage(Output.of(computeImage));
        }

        public Builder encrypted(@Nullable Output<Boolean> encrypted) {
            $.encrypted = encrypted;
            return this;
        }

        public Builder encrypted(Boolean encrypted) {
            return encrypted(Output.of(encrypted));
        }

        public Builder fstype(@Nullable Output<String> fstype) {
            $.fstype = fstype;
            return this;
        }

        public Builder fstype(String fstype) {
            return fstype(Output.of(fstype));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder requireUniqueZone(@Nullable Output<Boolean> requireUniqueZone) {
            $.requireUniqueZone = requireUniqueZone;
            return this;
        }

        public Builder requireUniqueZone(Boolean requireUniqueZone) {
            return requireUniqueZone(Output.of(requireUniqueZone));
        }

        public Builder sizeGb(@Nullable Output<Integer> sizeGb) {
            $.sizeGb = sizeGb;
            return this;
        }

        public Builder sizeGb(Integer sizeGb) {
            return sizeGb(Output.of(sizeGb));
        }

        public Builder snapshotId(@Nullable Output<String> snapshotId) {
            $.snapshotId = snapshotId;
            return this;
        }

        public Builder snapshotId(String snapshotId) {
            return snapshotId(Output.of(snapshotId));
        }

        public Builder snapshotRetention(@Nullable Output<Integer> snapshotRetention) {
            $.snapshotRetention = snapshotRetention;
            return this;
        }

        public Builder snapshotRetention(Integer snapshotRetention) {
            return snapshotRetention(Output.of(snapshotRetention));
        }

        public Builder sourceVolumeId(@Nullable Output<String> sourceVolumeId) {
            $.sourceVolumeId = sourceVolumeId;
            return this;
        }

        public Builder sourceVolumeId(String sourceVolumeId) {
            return sourceVolumeId(Output.of(sourceVolumeId));
        }

        public Builder uniqueZoneAppWide(@Nullable Output<Boolean> uniqueZoneAppWide) {
            $.uniqueZoneAppWide = uniqueZoneAppWide;
            return this;
        }

        public Builder uniqueZoneAppWide(Boolean uniqueZoneAppWide) {
            return uniqueZoneAppWide(Output.of(uniqueZoneAppWide));
        }

        public VolumeArgs build() {
            if ($.app == null) {
                throw new MissingRequiredPropertyException("VolumeArgs", "app");
            }
            return $;
        }
    }

}
