// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlyMachineSecretArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlyMachineSecretArgs Empty = new FlyMachineSecretArgs();

    @Import(name="envVar")
    private @Nullable Output<String> envVar;

    public Optional<Output<String>> envVar() {
        return Optional.ofNullable(this.envVar);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private FlyMachineSecretArgs() {}

    private FlyMachineSecretArgs(FlyMachineSecretArgs $) {
        this.envVar = $.envVar;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlyMachineSecretArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlyMachineSecretArgs $;

        public Builder() {
            $ = new FlyMachineSecretArgs();
        }

        public Builder(FlyMachineSecretArgs defaults) {
            $ = new FlyMachineSecretArgs(Objects.requireNonNull(defaults));
        }

        public Builder envVar(@Nullable Output<String> envVar) {
            $.envVar = envVar;
            return this;
        }

        public Builder envVar(String envVar) {
            return envVar(Output.of(envVar));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public FlyMachineSecretArgs build() {
            return $;
        }
    }

}
