// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlyStaticArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlyStaticArgs Empty = new FlyStaticArgs();

    @Import(name="guestPath", required=true)
    private Output<String> guestPath;

    public Output<String> guestPath() {
        return this.guestPath;
    }

    @Import(name="indexDocument")
    private @Nullable Output<String> indexDocument;

    public Optional<Output<String>> indexDocument() {
        return Optional.ofNullable(this.indexDocument);
    }

    @Import(name="tigrisBucket")
    private @Nullable Output<String> tigrisBucket;

    public Optional<Output<String>> tigrisBucket() {
        return Optional.ofNullable(this.tigrisBucket);
    }

    @Import(name="urlPrefix", required=true)
    private Output<String> urlPrefix;

    public Output<String> urlPrefix() {
        return this.urlPrefix;
    }

    private FlyStaticArgs() {}

    private FlyStaticArgs(FlyStaticArgs $) {
        this.guestPath = $.guestPath;
        this.indexDocument = $.indexDocument;
        this.tigrisBucket = $.tigrisBucket;
        this.urlPrefix = $.urlPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlyStaticArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlyStaticArgs $;

        public Builder() {
            $ = new FlyStaticArgs();
        }

        public Builder(FlyStaticArgs defaults) {
            $ = new FlyStaticArgs(Objects.requireNonNull(defaults));
        }

        public Builder guestPath(Output<String> guestPath) {
            $.guestPath = guestPath;
            return this;
        }

        public Builder guestPath(String guestPath) {
            return guestPath(Output.of(guestPath));
        }

        public Builder indexDocument(@Nullable Output<String> indexDocument) {
            $.indexDocument = indexDocument;
            return this;
        }

        public Builder indexDocument(String indexDocument) {
            return indexDocument(Output.of(indexDocument));
        }

        public Builder tigrisBucket(@Nullable Output<String> tigrisBucket) {
            $.tigrisBucket = tigrisBucket;
            return this;
        }

        public Builder tigrisBucket(String tigrisBucket) {
            return tigrisBucket(Output.of(tigrisBucket));
        }

        public Builder urlPrefix(Output<String> urlPrefix) {
            $.urlPrefix = urlPrefix;
            return this;
        }

        public Builder urlPrefix(String urlPrefix) {
            return urlPrefix(Output.of(urlPrefix));
        }

        public FlyStaticArgs build() {
            if ($.guestPath == null) {
                throw new MissingRequiredPropertyException("FlyStaticArgs", "guestPath");
            }
            if ($.urlPrefix == null) {
                throw new MissingRequiredPropertyException("FlyStaticArgs", "urlPrefix");
            }
            return $;
        }
    }

}
