// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlyMachineServiceConcurrencyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlyMachineServiceConcurrencyArgs Empty = new FlyMachineServiceConcurrencyArgs();

    @Import(name="hardLimit")
    private @Nullable Output<Integer> hardLimit;

    public Optional<Output<Integer>> hardLimit() {
        return Optional.ofNullable(this.hardLimit);
    }

    @Import(name="softLimit")
    private @Nullable Output<Integer> softLimit;

    public Optional<Output<Integer>> softLimit() {
        return Optional.ofNullable(this.softLimit);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private FlyMachineServiceConcurrencyArgs() {}

    private FlyMachineServiceConcurrencyArgs(FlyMachineServiceConcurrencyArgs $) {
        this.hardLimit = $.hardLimit;
        this.softLimit = $.softLimit;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlyMachineServiceConcurrencyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlyMachineServiceConcurrencyArgs $;

        public Builder() {
            $ = new FlyMachineServiceConcurrencyArgs();
        }

        public Builder(FlyMachineServiceConcurrencyArgs defaults) {
            $ = new FlyMachineServiceConcurrencyArgs(Objects.requireNonNull(defaults));
        }

        public Builder hardLimit(@Nullable Output<Integer> hardLimit) {
            $.hardLimit = hardLimit;
            return this;
        }

        public Builder hardLimit(Integer hardLimit) {
            return hardLimit(Output.of(hardLimit));
        }

        public Builder softLimit(@Nullable Output<Integer> softLimit) {
            $.softLimit = softLimit;
            return this;
        }

        public Builder softLimit(Integer softLimit) {
            return softLimit(Output.of(softLimit));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public FlyMachineServiceConcurrencyArgs build() {
            return $;
        }
    }

}
