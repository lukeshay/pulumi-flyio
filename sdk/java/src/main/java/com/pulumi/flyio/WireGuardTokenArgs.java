// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WireGuardTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final WireGuardTokenArgs Empty = new WireGuardTokenArgs();

    /**
     * The name of the WireGuard token.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the WireGuard token.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The organization to create the WireGuard token in.
     * 
     */
    @Import(name="org", required=true)
    private Output<String> org;

    /**
     * @return The organization to create the WireGuard token in.
     * 
     */
    public Output<String> org() {
        return this.org;
    }

    private WireGuardTokenArgs() {}

    private WireGuardTokenArgs(WireGuardTokenArgs $) {
        this.name = $.name;
        this.org = $.org;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WireGuardTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WireGuardTokenArgs $;

        public Builder() {
            $ = new WireGuardTokenArgs();
        }

        public Builder(WireGuardTokenArgs defaults) {
            $ = new WireGuardTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the WireGuard token.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the WireGuard token.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param org The organization to create the WireGuard token in.
         * 
         * @return builder
         * 
         */
        public Builder org(Output<String> org) {
            $.org = org;
            return this;
        }

        /**
         * @param org The organization to create the WireGuard token in.
         * 
         * @return builder
         * 
         */
        public Builder org(String org) {
            return org(Output.of(org));
        }

        public WireGuardTokenArgs build() {
            if ($.org == null) {
                throw new MissingRequiredPropertyException("WireGuardTokenArgs", "org");
            }
            return $;
        }
    }

}
