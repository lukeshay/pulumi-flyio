// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.flyio.flyio.inputs.FlyContainerDependencyArgs;
import com.pulumi.flyio.flyio.inputs.FlyContainerHealthcheckArgs;
import com.pulumi.flyio.flyio.inputs.FlyContainerMountArgs;
import com.pulumi.flyio.flyio.inputs.FlyEnvFromArgs;
import com.pulumi.flyio.flyio.inputs.FlyFileArgs;
import com.pulumi.flyio.flyio.inputs.FlyMachineRestartArgs;
import com.pulumi.flyio.flyio.inputs.FlyMachineSecretArgs;
import com.pulumi.flyio.flyio.inputs.FlyStopConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlyContainerConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlyContainerConfigArgs Empty = new FlyContainerConfigArgs();

    @Import(name="cmd")
    private @Nullable Output<List<String>> cmd;

    public Optional<Output<List<String>>> cmd() {
        return Optional.ofNullable(this.cmd);
    }

    @Import(name="dependsOn")
    private @Nullable Output<List<FlyContainerDependencyArgs>> dependsOn;

    public Optional<Output<List<FlyContainerDependencyArgs>>> dependsOn() {
        return Optional.ofNullable(this.dependsOn);
    }

    @Import(name="entrypoint")
    private @Nullable Output<List<String>> entrypoint;

    public Optional<Output<List<String>>> entrypoint() {
        return Optional.ofNullable(this.entrypoint);
    }

    @Import(name="env")
    private @Nullable Output<Map<String,String>> env;

    public Optional<Output<Map<String,String>>> env() {
        return Optional.ofNullable(this.env);
    }

    @Import(name="envFrom")
    private @Nullable Output<List<FlyEnvFromArgs>> envFrom;

    public Optional<Output<List<FlyEnvFromArgs>>> envFrom() {
        return Optional.ofNullable(this.envFrom);
    }

    @Import(name="exec")
    private @Nullable Output<List<String>> exec;

    public Optional<Output<List<String>>> exec() {
        return Optional.ofNullable(this.exec);
    }

    @Import(name="files")
    private @Nullable Output<List<FlyFileArgs>> files;

    public Optional<Output<List<FlyFileArgs>>> files() {
        return Optional.ofNullable(this.files);
    }

    @Import(name="healthchecks")
    private @Nullable Output<List<FlyContainerHealthcheckArgs>> healthchecks;

    public Optional<Output<List<FlyContainerHealthcheckArgs>>> healthchecks() {
        return Optional.ofNullable(this.healthchecks);
    }

    @Import(name="image")
    private @Nullable Output<String> image;

    public Optional<Output<String>> image() {
        return Optional.ofNullable(this.image);
    }

    @Import(name="mounts")
    private @Nullable Output<List<FlyContainerMountArgs>> mounts;

    public Optional<Output<List<FlyContainerMountArgs>>> mounts() {
        return Optional.ofNullable(this.mounts);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="restart")
    private @Nullable Output<FlyMachineRestartArgs> restart;

    public Optional<Output<FlyMachineRestartArgs>> restart() {
        return Optional.ofNullable(this.restart);
    }

    @Import(name="secrets")
    private @Nullable Output<List<FlyMachineSecretArgs>> secrets;

    public Optional<Output<List<FlyMachineSecretArgs>>> secrets() {
        return Optional.ofNullable(this.secrets);
    }

    @Import(name="stop")
    private @Nullable Output<FlyStopConfigArgs> stop;

    public Optional<Output<FlyStopConfigArgs>> stop() {
        return Optional.ofNullable(this.stop);
    }

    @Import(name="user")
    private @Nullable Output<String> user;

    public Optional<Output<String>> user() {
        return Optional.ofNullable(this.user);
    }

    private FlyContainerConfigArgs() {}

    private FlyContainerConfigArgs(FlyContainerConfigArgs $) {
        this.cmd = $.cmd;
        this.dependsOn = $.dependsOn;
        this.entrypoint = $.entrypoint;
        this.env = $.env;
        this.envFrom = $.envFrom;
        this.exec = $.exec;
        this.files = $.files;
        this.healthchecks = $.healthchecks;
        this.image = $.image;
        this.mounts = $.mounts;
        this.name = $.name;
        this.restart = $.restart;
        this.secrets = $.secrets;
        this.stop = $.stop;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlyContainerConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlyContainerConfigArgs $;

        public Builder() {
            $ = new FlyContainerConfigArgs();
        }

        public Builder(FlyContainerConfigArgs defaults) {
            $ = new FlyContainerConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder cmd(@Nullable Output<List<String>> cmd) {
            $.cmd = cmd;
            return this;
        }

        public Builder cmd(List<String> cmd) {
            return cmd(Output.of(cmd));
        }

        public Builder cmd(String... cmd) {
            return cmd(List.of(cmd));
        }

        public Builder dependsOn(@Nullable Output<List<FlyContainerDependencyArgs>> dependsOn) {
            $.dependsOn = dependsOn;
            return this;
        }

        public Builder dependsOn(List<FlyContainerDependencyArgs> dependsOn) {
            return dependsOn(Output.of(dependsOn));
        }

        public Builder dependsOn(FlyContainerDependencyArgs... dependsOn) {
            return dependsOn(List.of(dependsOn));
        }

        public Builder entrypoint(@Nullable Output<List<String>> entrypoint) {
            $.entrypoint = entrypoint;
            return this;
        }

        public Builder entrypoint(List<String> entrypoint) {
            return entrypoint(Output.of(entrypoint));
        }

        public Builder entrypoint(String... entrypoint) {
            return entrypoint(List.of(entrypoint));
        }

        public Builder env(@Nullable Output<Map<String,String>> env) {
            $.env = env;
            return this;
        }

        public Builder env(Map<String,String> env) {
            return env(Output.of(env));
        }

        public Builder envFrom(@Nullable Output<List<FlyEnvFromArgs>> envFrom) {
            $.envFrom = envFrom;
            return this;
        }

        public Builder envFrom(List<FlyEnvFromArgs> envFrom) {
            return envFrom(Output.of(envFrom));
        }

        public Builder envFrom(FlyEnvFromArgs... envFrom) {
            return envFrom(List.of(envFrom));
        }

        public Builder exec(@Nullable Output<List<String>> exec) {
            $.exec = exec;
            return this;
        }

        public Builder exec(List<String> exec) {
            return exec(Output.of(exec));
        }

        public Builder exec(String... exec) {
            return exec(List.of(exec));
        }

        public Builder files(@Nullable Output<List<FlyFileArgs>> files) {
            $.files = files;
            return this;
        }

        public Builder files(List<FlyFileArgs> files) {
            return files(Output.of(files));
        }

        public Builder files(FlyFileArgs... files) {
            return files(List.of(files));
        }

        public Builder healthchecks(@Nullable Output<List<FlyContainerHealthcheckArgs>> healthchecks) {
            $.healthchecks = healthchecks;
            return this;
        }

        public Builder healthchecks(List<FlyContainerHealthcheckArgs> healthchecks) {
            return healthchecks(Output.of(healthchecks));
        }

        public Builder healthchecks(FlyContainerHealthcheckArgs... healthchecks) {
            return healthchecks(List.of(healthchecks));
        }

        public Builder image(@Nullable Output<String> image) {
            $.image = image;
            return this;
        }

        public Builder image(String image) {
            return image(Output.of(image));
        }

        public Builder mounts(@Nullable Output<List<FlyContainerMountArgs>> mounts) {
            $.mounts = mounts;
            return this;
        }

        public Builder mounts(List<FlyContainerMountArgs> mounts) {
            return mounts(Output.of(mounts));
        }

        public Builder mounts(FlyContainerMountArgs... mounts) {
            return mounts(List.of(mounts));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder restart(@Nullable Output<FlyMachineRestartArgs> restart) {
            $.restart = restart;
            return this;
        }

        public Builder restart(FlyMachineRestartArgs restart) {
            return restart(Output.of(restart));
        }

        public Builder secrets(@Nullable Output<List<FlyMachineSecretArgs>> secrets) {
            $.secrets = secrets;
            return this;
        }

        public Builder secrets(List<FlyMachineSecretArgs> secrets) {
            return secrets(Output.of(secrets));
        }

        public Builder secrets(FlyMachineSecretArgs... secrets) {
            return secrets(List.of(secrets));
        }

        public Builder stop(@Nullable Output<FlyStopConfigArgs> stop) {
            $.stop = stop;
            return this;
        }

        public Builder stop(FlyStopConfigArgs stop) {
            return stop(Output.of(stop));
        }

        public Builder user(@Nullable Output<String> user) {
            $.user = user;
            return this;
        }

        public Builder user(String user) {
            return user(Output.of(user));
        }

        public FlyContainerConfigArgs build() {
            return $;
        }
    }

}
