// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlyStatic {
    private String guestPath;
    private @Nullable String indexDocument;
    private @Nullable String tigrisBucket;
    private String urlPrefix;

    private FlyStatic() {}
    public String guestPath() {
        return this.guestPath;
    }
    public Optional<String> indexDocument() {
        return Optional.ofNullable(this.indexDocument);
    }
    public Optional<String> tigrisBucket() {
        return Optional.ofNullable(this.tigrisBucket);
    }
    public String urlPrefix() {
        return this.urlPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlyStatic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String guestPath;
        private @Nullable String indexDocument;
        private @Nullable String tigrisBucket;
        private String urlPrefix;
        public Builder() {}
        public Builder(FlyStatic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.guestPath = defaults.guestPath;
    	      this.indexDocument = defaults.indexDocument;
    	      this.tigrisBucket = defaults.tigrisBucket;
    	      this.urlPrefix = defaults.urlPrefix;
        }

        @CustomType.Setter
        public Builder guestPath(String guestPath) {
            if (guestPath == null) {
              throw new MissingRequiredPropertyException("FlyStatic", "guestPath");
            }
            this.guestPath = guestPath;
            return this;
        }
        @CustomType.Setter
        public Builder indexDocument(@Nullable String indexDocument) {

            this.indexDocument = indexDocument;
            return this;
        }
        @CustomType.Setter
        public Builder tigrisBucket(@Nullable String tigrisBucket) {

            this.tigrisBucket = tigrisBucket;
            return this;
        }
        @CustomType.Setter
        public Builder urlPrefix(String urlPrefix) {
            if (urlPrefix == null) {
              throw new MissingRequiredPropertyException("FlyStatic", "urlPrefix");
            }
            this.urlPrefix = urlPrefix;
            return this;
        }
        public FlyStatic build() {
            final var _resultValue = new FlyStatic();
            _resultValue.guestPath = guestPath;
            _resultValue.indexDocument = indexDocument;
            _resultValue.tigrisBucket = tigrisBucket;
            _resultValue.urlPrefix = urlPrefix;
            return _resultValue;
        }
    }
}
