// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.flyio.flyio.inputs.FlyHTTPResponseOptionsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlyHTTPOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlyHTTPOptionsArgs Empty = new FlyHTTPOptionsArgs();

    @Import(name="compress")
    private @Nullable Output<Boolean> compress;

    public Optional<Output<Boolean>> compress() {
        return Optional.ofNullable(this.compress);
    }

    @Import(name="h2Backend")
    private @Nullable Output<Boolean> h2Backend;

    public Optional<Output<Boolean>> h2Backend() {
        return Optional.ofNullable(this.h2Backend);
    }

    @Import(name="headersReadTimeout")
    private @Nullable Output<Integer> headersReadTimeout;

    public Optional<Output<Integer>> headersReadTimeout() {
        return Optional.ofNullable(this.headersReadTimeout);
    }

    @Import(name="idleTimeout")
    private @Nullable Output<Integer> idleTimeout;

    public Optional<Output<Integer>> idleTimeout() {
        return Optional.ofNullable(this.idleTimeout);
    }

    @Import(name="response")
    private @Nullable Output<FlyHTTPResponseOptionsArgs> response;

    public Optional<Output<FlyHTTPResponseOptionsArgs>> response() {
        return Optional.ofNullable(this.response);
    }

    private FlyHTTPOptionsArgs() {}

    private FlyHTTPOptionsArgs(FlyHTTPOptionsArgs $) {
        this.compress = $.compress;
        this.h2Backend = $.h2Backend;
        this.headersReadTimeout = $.headersReadTimeout;
        this.idleTimeout = $.idleTimeout;
        this.response = $.response;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlyHTTPOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlyHTTPOptionsArgs $;

        public Builder() {
            $ = new FlyHTTPOptionsArgs();
        }

        public Builder(FlyHTTPOptionsArgs defaults) {
            $ = new FlyHTTPOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder compress(@Nullable Output<Boolean> compress) {
            $.compress = compress;
            return this;
        }

        public Builder compress(Boolean compress) {
            return compress(Output.of(compress));
        }

        public Builder h2Backend(@Nullable Output<Boolean> h2Backend) {
            $.h2Backend = h2Backend;
            return this;
        }

        public Builder h2Backend(Boolean h2Backend) {
            return h2Backend(Output.of(h2Backend));
        }

        public Builder headersReadTimeout(@Nullable Output<Integer> headersReadTimeout) {
            $.headersReadTimeout = headersReadTimeout;
            return this;
        }

        public Builder headersReadTimeout(Integer headersReadTimeout) {
            return headersReadTimeout(Output.of(headersReadTimeout));
        }

        public Builder idleTimeout(@Nullable Output<Integer> idleTimeout) {
            $.idleTimeout = idleTimeout;
            return this;
        }

        public Builder idleTimeout(Integer idleTimeout) {
            return idleTimeout(Output.of(idleTimeout));
        }

        public Builder response(@Nullable Output<FlyHTTPResponseOptionsArgs> response) {
            $.response = response;
            return this;
        }

        public Builder response(FlyHTTPResponseOptionsArgs response) {
            return response(Output.of(response));
        }

        public FlyHTTPOptionsArgs build() {
            return $;
        }
    }

}
