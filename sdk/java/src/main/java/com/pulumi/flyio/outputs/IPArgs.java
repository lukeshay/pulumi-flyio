// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IPArgs {
    /**
     * @return The type of IP address (v4 or v6).
     * 
     */
    private String addrType;
    /**
     * @return The name of the Fly.io application to allocate the IP address for.
     * 
     */
    private String app;
    /**
     * @return The network to allocate the IP address in.
     * 
     */
    private @Nullable String network;
    /**
     * @return The region to allocate the IP address in.
     * 
     */
    private String region;

    private IPArgs() {}
    /**
     * @return The type of IP address (v4 or v6).
     * 
     */
    public String addrType() {
        return this.addrType;
    }
    /**
     * @return The name of the Fly.io application to allocate the IP address for.
     * 
     */
    public String app() {
        return this.app;
    }
    /**
     * @return The network to allocate the IP address in.
     * 
     */
    public Optional<String> network() {
        return Optional.ofNullable(this.network);
    }
    /**
     * @return The region to allocate the IP address in.
     * 
     */
    public String region() {
        return this.region;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IPArgs defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addrType;
        private String app;
        private @Nullable String network;
        private String region;
        public Builder() {}
        public Builder(IPArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addrType = defaults.addrType;
    	      this.app = defaults.app;
    	      this.network = defaults.network;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder addrType(String addrType) {
            if (addrType == null) {
              throw new MissingRequiredPropertyException("IPArgs", "addrType");
            }
            this.addrType = addrType;
            return this;
        }
        @CustomType.Setter
        public Builder app(String app) {
            if (app == null) {
              throw new MissingRequiredPropertyException("IPArgs", "app");
            }
            this.app = app;
            return this;
        }
        @CustomType.Setter
        public Builder network(@Nullable String network) {

            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("IPArgs", "region");
            }
            this.region = region;
            return this;
        }
        public IPArgs build() {
            final var _resultValue = new IPArgs();
            _resultValue.addrType = addrType;
            _resultValue.app = app;
            _resultValue.network = network;
            _resultValue.region = region;
            return _resultValue;
        }
    }
}
