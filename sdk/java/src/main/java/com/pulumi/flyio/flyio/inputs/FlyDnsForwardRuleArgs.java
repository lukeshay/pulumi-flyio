// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.flyio.flyio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlyDnsForwardRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlyDnsForwardRuleArgs Empty = new FlyDnsForwardRuleArgs();

    @Import(name="addr")
    private @Nullable Output<String> addr;

    public Optional<Output<String>> addr() {
        return Optional.ofNullable(this.addr);
    }

    @Import(name="basename")
    private @Nullable Output<String> basename;

    public Optional<Output<String>> basename() {
        return Optional.ofNullable(this.basename);
    }

    private FlyDnsForwardRuleArgs() {}

    private FlyDnsForwardRuleArgs(FlyDnsForwardRuleArgs $) {
        this.addr = $.addr;
        this.basename = $.basename;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlyDnsForwardRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlyDnsForwardRuleArgs $;

        public Builder() {
            $ = new FlyDnsForwardRuleArgs();
        }

        public Builder(FlyDnsForwardRuleArgs defaults) {
            $ = new FlyDnsForwardRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder addr(@Nullable Output<String> addr) {
            $.addr = addr;
            return this;
        }

        public Builder addr(String addr) {
            return addr(Output.of(addr));
        }

        public Builder basename(@Nullable Output<String> basename) {
            $.basename = basename;
            return this;
        }

        public Builder basename(String basename) {
            return basename(Output.of(basename));
        }

        public FlyDnsForwardRuleArgs build() {
            return $;
        }
    }

}
