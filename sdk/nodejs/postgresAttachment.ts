// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * A Fly.io Postgres attachment connects a Postgres database to an application.
 */
export class PostgresAttachment extends pulumi.CustomResource {
    /**
     * Get an existing PostgresAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PostgresAttachment {
        return new PostgresAttachment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'flyio:index:PostgresAttachment';

    /**
     * Returns true if the given object is an instance of PostgresAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PostgresAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PostgresAttachment.__pulumiType;
    }

    /**
     * The application to attach the Postgres database to.
     */
    public readonly app!: pulumi.Output<string>;
    /**
     * The unique ID of the Postgres attachment.
     */
    public /*out*/ readonly attachmentId!: pulumi.Output<string>;
    /**
     * The PostgreSQL connection string.
     */
    public /*out*/ readonly connectionString!: pulumi.Output<string>;
    /**
     * The name of the database to use.
     */
    public readonly databaseName!: pulumi.Output<string | undefined>;
    /**
     * The database user to connect as.
     */
    public readonly databaseUser!: pulumi.Output<string | undefined>;
    /**
     * Whether to manually enter the connection details.
     */
    public readonly manualEntry!: pulumi.Output<boolean | undefined>;
    /**
     * The Postgres cluster to attach.
     */
    public readonly postgres!: pulumi.Output<string>;
    /**
     * The environment variable name that contains the connection string.
     */
    public readonly variableName!: pulumi.Output<string>;

    /**
     * Create a PostgresAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PostgresAttachmentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.app === undefined) && !opts.urn) {
                throw new Error("Missing required property 'app'");
            }
            if ((!args || args.postgres === undefined) && !opts.urn) {
                throw new Error("Missing required property 'postgres'");
            }
            resourceInputs["app"] = args ? args.app : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["databaseUser"] = args ? args.databaseUser : undefined;
            resourceInputs["manualEntry"] = args ? args.manualEntry : undefined;
            resourceInputs["postgres"] = args ? args.postgres : undefined;
            resourceInputs["variableName"] = args ? args.variableName : undefined;
            resourceInputs["attachmentId"] = undefined /*out*/;
            resourceInputs["connectionString"] = undefined /*out*/;
        } else {
            resourceInputs["app"] = undefined /*out*/;
            resourceInputs["attachmentId"] = undefined /*out*/;
            resourceInputs["connectionString"] = undefined /*out*/;
            resourceInputs["databaseName"] = undefined /*out*/;
            resourceInputs["databaseUser"] = undefined /*out*/;
            resourceInputs["manualEntry"] = undefined /*out*/;
            resourceInputs["postgres"] = undefined /*out*/;
            resourceInputs["variableName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["connectionString"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(PostgresAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a PostgresAttachment resource.
 */
export interface PostgresAttachmentArgs {
    /**
     * The application to attach the Postgres database to.
     */
    app: pulumi.Input<string>;
    /**
     * The name of the database to use.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * The database user to connect as.
     */
    databaseUser?: pulumi.Input<string>;
    /**
     * Whether to manually enter the connection details.
     */
    manualEntry?: pulumi.Input<boolean>;
    /**
     * The Postgres cluster to attach.
     */
    postgres: pulumi.Input<string>;
    /**
     * The environment variable name to store the connection string.
     */
    variableName?: pulumi.Input<string>;
}
