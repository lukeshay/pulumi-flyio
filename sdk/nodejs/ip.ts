// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * A Fly.io IP address allocation for an application.
 */
export class IP extends pulumi.CustomResource {
    /**
     * Get an existing IP resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IP {
        return new IP(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'flyio:index:IP';

    /**
     * Returns true if the given object is an instance of IP.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IP {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IP.__pulumiType;
    }

    /**
     * The allocated IP address.
     */
    public /*out*/ readonly address!: pulumi.Output<string>;
    /**
     * The application the IP address is allocated for.
     */
    public readonly app!: pulumi.Output<string>;
    /**
     * When the IP address was allocated.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<outputs.time.Time>;
    /**
     * The Fly.io IP address ID.
     */
    public /*out*/ readonly flyId!: pulumi.Output<string | undefined>;
    /**
     * The input arguments used to allocate the IP address.
     */
    public /*out*/ readonly input!: pulumi.Output<outputs.IPArgs>;
    /**
     * The network the IP address belongs to.
     */
    public readonly network!: pulumi.Output<string | undefined>;
    /**
     * The region the IP address is allocated in.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * The type of IP address (v4 or v6).
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a IP resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IPArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.addrType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addrType'");
            }
            if ((!args || args.app === undefined) && !opts.urn) {
                throw new Error("Missing required property 'app'");
            }
            resourceInputs["addrType"] = args ? args.addrType : undefined;
            resourceInputs["app"] = args ? args.app : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["address"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["flyId"] = undefined /*out*/;
            resourceInputs["input"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        } else {
            resourceInputs["address"] = undefined /*out*/;
            resourceInputs["app"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["flyId"] = undefined /*out*/;
            resourceInputs["input"] = undefined /*out*/;
            resourceInputs["network"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IP.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a IP resource.
 */
export interface IPArgs {
    /**
     * The type of IP address (v4 or v6).
     */
    addrType: pulumi.Input<string>;
    /**
     * The name of the Fly.io application to allocate the IP address for.
     */
    app: pulumi.Input<string>;
    /**
     * The network to allocate the IP address in.
     */
    network?: pulumi.Input<string>;
    /**
     * The region to allocate the IP address in.
     */
    region?: pulumi.Input<string>;
}
