// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Flyio.Flyio.Inputs
{

    public sealed class FlyDNSConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("dnsForwardRules")]
        private InputList<Inputs.FlyDnsForwardRuleArgs>? _dnsForwardRules;
        public InputList<Inputs.FlyDnsForwardRuleArgs> DnsForwardRules
        {
            get => _dnsForwardRules ?? (_dnsForwardRules = new InputList<Inputs.FlyDnsForwardRuleArgs>());
            set => _dnsForwardRules = value;
        }

        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        [Input("hostnameFqdn")]
        public Input<string>? HostnameFqdn { get; set; }

        [Input("nameservers")]
        private InputList<string>? _nameservers;
        public InputList<string> Nameservers
        {
            get => _nameservers ?? (_nameservers = new InputList<string>());
            set => _nameservers = value;
        }

        [Input("options")]
        private InputList<Inputs.FlyDnsOptionArgs>? _options;
        public InputList<Inputs.FlyDnsOptionArgs> Options
        {
            get => _options ?? (_options = new InputList<Inputs.FlyDnsOptionArgs>());
            set => _options = value;
        }

        [Input("searches")]
        private InputList<string>? _searches;
        public InputList<string> Searches
        {
            get => _searches ?? (_searches = new InputList<string>());
            set => _searches = value;
        }

        [Input("skipRegistration")]
        public Input<bool>? SkipRegistration { get; set; }

        public FlyDNSConfigArgs()
        {
        }
        public static new FlyDNSConfigArgs Empty => new FlyDNSConfigArgs();
    }
}
