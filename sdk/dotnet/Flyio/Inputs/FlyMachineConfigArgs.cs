// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Flyio.Flyio.Inputs
{

    public sealed class FlyMachineConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoDestroy")]
        public Input<bool>? AutoDestroy { get; set; }

        [Input("checks")]
        private InputMap<Inputs.FlyMachineCheckArgs>? _checks;
        public InputMap<Inputs.FlyMachineCheckArgs> Checks
        {
            get => _checks ?? (_checks = new InputMap<Inputs.FlyMachineCheckArgs>());
            set => _checks = value;
        }

        [Input("dns")]
        public Input<Inputs.FlyDNSConfigArgs>? Dns { get; set; }

        [Input("env")]
        private InputMap<string>? _env;
        public InputMap<string> Env
        {
            get => _env ?? (_env = new InputMap<string>());
            set => _env = value;
        }

        [Input("files")]
        private InputList<Inputs.FlyFileArgs>? _files;
        public InputList<Inputs.FlyFileArgs> Files
        {
            get => _files ?? (_files = new InputList<Inputs.FlyFileArgs>());
            set => _files = value;
        }

        [Input("guest")]
        public Input<Inputs.FlyMachineGuestArgs>? Guest { get; set; }

        [Input("image", required: true)]
        public Input<string> Image { get; set; } = null!;

        [Input("init")]
        public Input<Inputs.FlyMachineInitArgs>? Init { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        [Input("metrics")]
        public Input<Inputs.FlyMachineMetricsArgs>? Metrics { get; set; }

        [Input("mounts")]
        private InputList<Inputs.FlyMachineMountArgs>? _mounts;
        public InputList<Inputs.FlyMachineMountArgs> Mounts
        {
            get => _mounts ?? (_mounts = new InputList<Inputs.FlyMachineMountArgs>());
            set => _mounts = value;
        }

        [Input("processes")]
        private InputList<Inputs.FlyMachineProcessArgs>? _processes;
        public InputList<Inputs.FlyMachineProcessArgs> Processes
        {
            get => _processes ?? (_processes = new InputList<Inputs.FlyMachineProcessArgs>());
            set => _processes = value;
        }

        [Input("restart")]
        public Input<Inputs.FlyMachineRestartArgs>? Restart { get; set; }

        [Input("schedule")]
        public Input<string>? Schedule { get; set; }

        [Input("services")]
        private InputList<Inputs.FlyMachineServiceArgs>? _services;
        public InputList<Inputs.FlyMachineServiceArgs> Services
        {
            get => _services ?? (_services = new InputList<Inputs.FlyMachineServiceArgs>());
            set => _services = value;
        }

        [Input("standbys")]
        private InputList<string>? _standbys;
        public InputList<string> Standbys
        {
            get => _standbys ?? (_standbys = new InputList<string>());
            set => _standbys = value;
        }

        [Input("statics")]
        private InputList<Inputs.FlyStaticArgs>? _statics;
        public InputList<Inputs.FlyStaticArgs> Statics
        {
            get => _statics ?? (_statics = new InputList<Inputs.FlyStaticArgs>());
            set => _statics = value;
        }

        [Input("stopConfig")]
        public Input<Inputs.FlyStopConfigArgs>? StopConfig { get; set; }

        public FlyMachineConfigArgs()
        {
        }
        public static new FlyMachineConfigArgs Empty => new FlyMachineConfigArgs();
    }
}
