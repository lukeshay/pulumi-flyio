// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiFlyio.Flyio.Flyio.Outputs
{

    [OutputType]
    public sealed class FlyMachinePort
    {
        public readonly int? EndPort;
        public readonly bool? ForceHttps;
        public readonly ImmutableArray<string> Handlers;
        public readonly Outputs.FlyHTTPOptions? HttpOptions;
        public readonly int? Port;
        public readonly Outputs.FlyProxyProtoOptions? ProxyProtoOptions;
        public readonly int? StartPort;
        public readonly Outputs.FlyTLSOptions? TlsOptions;

        [OutputConstructor]
        private FlyMachinePort(
            int? endPort,

            bool? forceHttps,

            ImmutableArray<string> handlers,

            Outputs.FlyHTTPOptions? httpOptions,

            int? port,

            Outputs.FlyProxyProtoOptions? proxyProtoOptions,

            int? startPort,

            Outputs.FlyTLSOptions? tlsOptions)
        {
            EndPort = endPort;
            ForceHttps = forceHttps;
            Handlers = handlers;
            HttpOptions = httpOptions;
            Port = port;
            ProxyProtoOptions = proxyProtoOptions;
            StartPort = startPort;
            TlsOptions = tlsOptions;
        }
    }
}
