// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Flyio.Flyio.Outputs
{

    [OutputType]
    public sealed class FlyMachineService
    {
        public readonly bool? Autostart;
        public readonly string? Autostop;
        public readonly ImmutableArray<Outputs.FlyMachineCheck> Checks;
        public readonly Outputs.FlyMachineServiceConcurrency? Concurrency;
        public readonly string? ForceInstanceDescription;
        public readonly string? ForceInstanceKey;
        public readonly int? InternalPort;
        public readonly int? MinMachinesRunning;
        public readonly ImmutableArray<Outputs.FlyMachinePort> Ports;
        public readonly string? Protocol;

        [OutputConstructor]
        private FlyMachineService(
            bool? autostart,

            string? autostop,

            ImmutableArray<Outputs.FlyMachineCheck> checks,

            Outputs.FlyMachineServiceConcurrency? concurrency,

            string? forceInstanceDescription,

            string? forceInstanceKey,

            int? internalPort,

            int? minMachinesRunning,

            ImmutableArray<Outputs.FlyMachinePort> ports,

            string? protocol)
        {
            Autostart = autostart;
            Autostop = autostop;
            Checks = checks;
            Concurrency = concurrency;
            ForceInstanceDescription = forceInstanceDescription;
            ForceInstanceKey = forceInstanceKey;
            InternalPort = internalPort;
            MinMachinesRunning = minMachinesRunning;
            Ports = ports;
            Protocol = protocol;
        }
    }
}
