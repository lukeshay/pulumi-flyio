// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Flyio
{
    [FlyioResourceType("flyio:index:Machine")]
    public partial class Machine : global::Pulumi.CustomResource
    {
        [Output("appName")]
        public Output<string> AppName { get; private set; } = null!;

        [Output("checks")]
        public Output<ImmutableArray<Pulumi.Flyio.Flyio.Outputs.CheckStatus>> Checks { get; private set; } = null!;

        [Output("config")]
        public Output<Pulumi.Flyio.Flyio.Outputs.FlyMachineConfig> Config { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string?> CreatedAt { get; private set; } = null!;

        [Output("events")]
        public Output<ImmutableArray<Pulumi.Flyio.Flyio.Outputs.MachineEvent>> Events { get; private set; } = null!;

        [Output("flyId")]
        public Output<string> FlyId { get; private set; } = null!;

        [Output("imageRef")]
        public Output<Pulumi.Flyio.Flyio.Outputs.ImageRef?> ImageRef { get; private set; } = null!;

        [Output("input")]
        public Output<Outputs.MachineArgs> Input { get; private set; } = null!;

        [Output("instanceId")]
        public Output<string?> InstanceId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("nonce")]
        public Output<string?> Nonce { get; private set; } = null!;

        [Output("privateIp")]
        public Output<string?> PrivateIp { get; private set; } = null!;

        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string?> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a Machine resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Machine(string name, MachineArgs args, CustomResourceOptions? options = null)
            : base("flyio:index:Machine", name, args ?? new MachineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Machine(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("flyio:index:Machine", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Machine resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Machine Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Machine(name, id, options);
        }
    }

    public sealed class MachineArgs : global::Pulumi.ResourceArgs
    {
        [Input("appName", required: true)]
        public Input<string> AppName { get; set; } = null!;

        [Input("config", required: true)]
        public Input<Pulumi.Flyio.Flyio.Inputs.FlyMachineConfigArgs> Config { get; set; } = null!;

        [Input("leaseTtl")]
        public Input<int>? LeaseTtl { get; set; }

        [Input("lsvd")]
        public Input<bool>? Lsvd { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("skipLaunch")]
        public Input<bool>? SkipLaunch { get; set; }

        [Input("skipServiceRegistration")]
        public Input<bool>? SkipServiceRegistration { get; set; }

        [Input("updateStrategy")]
        public Input<string>? UpdateStrategy { get; set; }

        [Input("waitForChecks")]
        public Input<int>? WaitForChecks { get; set; }

        public MachineArgs()
        {
        }
        public static new MachineArgs Empty => new MachineArgs();
    }
}
