// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Flyio.Outputs
{

    [OutputType]
    public sealed class MachineArgs
    {
        public readonly string AppName;
        public readonly Pulumi.Flyio.Flyio.Outputs.FlyMachineConfig Config;
        public readonly int? LeaseTtl;
        public readonly bool? Lsvd;
        public readonly string? Name;
        public readonly string? Region;
        public readonly bool? SkipLaunch;
        public readonly bool? SkipServiceRegistration;
        public readonly string? UpdateStrategy;
        public readonly int? WaitForChecks;
        public readonly int? WaitForUpdate;

        [OutputConstructor]
        private MachineArgs(
            string appName,

            Pulumi.Flyio.Flyio.Outputs.FlyMachineConfig config,

            int? leaseTtl,

            bool? lsvd,

            string? name,

            string? region,

            bool? skipLaunch,

            bool? skipServiceRegistration,

            string? updateStrategy,

            int? waitForChecks,

            int? waitForUpdate)
        {
            AppName = appName;
            Config = config;
            LeaseTtl = leaseTtl;
            Lsvd = lsvd;
            Name = name;
            Region = region;
            SkipLaunch = skipLaunch;
            SkipServiceRegistration = skipServiceRegistration;
            UpdateStrategy = updateStrategy;
            WaitForChecks = waitForChecks;
            WaitForUpdate = waitForUpdate;
        }
    }
}
