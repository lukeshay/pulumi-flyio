// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiFlyio.Flyio.Outputs
{

    [OutputType]
    public sealed class VolumeArgs
    {
        public readonly string App;
        public readonly bool? AutoBackupEnabled;
        public readonly PulumiFlyio.Flyio.Flyio.Outputs.FlyMachineGuest? Compute;
        public readonly string? ComputeImage;
        public readonly bool? Encrypted;
        public readonly string? Fstype;
        public readonly string? Name;
        public readonly string? Region;
        public readonly bool? RequireUniqueZone;
        public readonly int? SizeGb;
        public readonly string? SnapshotId;
        public readonly int? SnapshotRetention;
        public readonly string? SourceVolumeId;

        [OutputConstructor]
        private VolumeArgs(
            string app,

            bool? autoBackupEnabled,

            PulumiFlyio.Flyio.Flyio.Outputs.FlyMachineGuest? compute,

            string? computeImage,

            bool? encrypted,

            string? fstype,

            string? name,

            string? region,

            bool? requireUniqueZone,

            int? sizeGb,

            string? snapshotId,

            int? snapshotRetention,

            string? sourceVolumeId)
        {
            App = app;
            AutoBackupEnabled = autoBackupEnabled;
            Compute = compute;
            ComputeImage = computeImage;
            Encrypted = encrypted;
            Fstype = fstype;
            Name = name;
            Region = region;
            RequireUniqueZone = requireUniqueZone;
            SizeGb = sizeGb;
            SnapshotId = snapshotId;
            SnapshotRetention = snapshotRetention;
            SourceVolumeId = sourceVolumeId;
        }
    }
}
