// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Flyio
{
    [FlyioResourceType("flyio:index:WireGuardPeer")]
    public partial class WireGuardPeer : global::Pulumi.CustomResource
    {
        [Output("endpointIp")]
        public Output<string> EndpointIp { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("network")]
        public Output<string?> Network { get; private set; } = null!;

        [Output("org")]
        public Output<string> Org { get; private set; } = null!;

        [Output("peerIp")]
        public Output<string> PeerIp { get; private set; } = null!;

        [Output("privateKey")]
        public Output<string> PrivateKey { get; private set; } = null!;

        [Output("publicKey")]
        public Output<string> PublicKey { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("wireguardConfig")]
        public Output<string> WireguardConfig { get; private set; } = null!;


        /// <summary>
        /// Create a WireGuardPeer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WireGuardPeer(string name, WireGuardPeerArgs args, CustomResourceOptions? options = null)
            : base("flyio:index:WireGuardPeer", name, args ?? new WireGuardPeerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WireGuardPeer(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("flyio:index:WireGuardPeer", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lukeshay",
                AdditionalSecretOutputs =
                {
                    "privateKey",
                    "publicKey",
                    "wireguardConfig",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WireGuardPeer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WireGuardPeer Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new WireGuardPeer(name, id, options);
        }
    }

    public sealed class WireGuardPeerArgs : global::Pulumi.ResourceArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("network")]
        public Input<string>? Network { get; set; }

        [Input("org", required: true)]
        public Input<string> Org { get; set; } = null!;

        [Input("region")]
        public Input<string>? Region { get; set; }

        public WireGuardPeerArgs()
        {
        }
        public static new WireGuardPeerArgs Empty => new WireGuardPeerArgs();
    }
}
