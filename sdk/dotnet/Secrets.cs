// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiFlyio.Flyio
{
    /// <summary>
    /// Manages application secrets for a Fly.io application.
    /// </summary>
    [FlyioResourceType("flyio:index:Secrets")]
    public partial class Secrets : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Fly.io application the secrets are set for.
        /// </summary>
        [Output("app")]
        public Output<string> App { get; private set; } = null!;

        /// <summary>
        /// The secret values, as key-value pairs.
        /// </summary>
        [Output("values")]
        public Output<ImmutableDictionary<string, string>> Values { get; private set; } = null!;


        /// <summary>
        /// Create a Secrets resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Secrets(string name, SecretsArgs args, CustomResourceOptions? options = null)
            : base("flyio:index:Secrets", name, args ?? new SecretsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Secrets(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("flyio:index:Secrets", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lukeshay",
                AdditionalSecretOutputs =
                {
                    "values",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Secrets resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Secrets Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Secrets(name, id, options);
        }
    }

    public sealed class SecretsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Fly.io application to set secrets for.
        /// </summary>
        [Input("app", required: true)]
        public Input<string> App { get; set; } = null!;

        [Input("values", required: true)]
        private InputMap<string>? _values;

        /// <summary>
        /// The secret values to set, as key-value pairs.
        /// </summary>
        public InputMap<string> Values
        {
            get => _values ?? (_values = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _values = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        public SecretsArgs()
        {
        }
        public static new SecretsArgs Empty => new SecretsArgs();
    }
}
