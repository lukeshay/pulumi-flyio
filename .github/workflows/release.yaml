name: release

on:
  push:
    tags:
      - v*.*.*
      - "!v*.*.*-**"

permissions:
  contents: write
  discussions: write

env:
  PROVIDER: "flyio"
  PUBLISH_NPM: true
  NPM_REGISTRY_URL: https://registry.npmjs.org
  NUGET_FEED_URL: https://api.nuget.org/v3/index.json
  PUBLISH_NUGET: false
  PYPI_REPOSITORY_URL: ""
  PUBLISH_PYPI: false

jobs:
  publish_binary:
    name: publish
    runs-on: ubuntu-latest
    environment: release
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      NUGET_PUBLISH_KEY: ""
      PYPI_PASSWORD: ""
      PYPI_USERNAME: ""
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        id: git
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - uses: jdx/mise-action@v2
        with:
          experimental: true
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: pulumi/pulumictl
          cache: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          args: -p 3 release --rm-dist
          version: latest
  publish_sdk:
    name: Publish SDKs
    runs-on: ubuntu-latest
    needs: publish_binary
    environment: release
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      NUGET_PUBLISH_KEY: ""
      PYPI_PASSWORD: ""
      PYPI_USERNAME: ""
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        id: git
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Cache Mise
        id: cache-mise
        uses: actions/cache@v4
        with:
          path: /github/home/.local/share/mise/installs
      - uses: jdx/mise-action@v2
        with:
          experimental: true
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: pulumi/pulumictl
          cache: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate SDK
        run: make ${{ matrix.language }}_sdk
      - name: Check worktree clean
        run: |
          git update-index -q --refresh
          if ! git diff-files --quiet; then
              >&2 echo "error: working tree is not clean, aborting!"
              git status
              git diff
              exit 1
          fi
      - name: Compress SDK folder
        run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.language  }}-sdk.tar.gz
          path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
      - if: ${{ matrix.language == 'python' && env.PUBLISH_PYPI == 'true' }}
        name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ env.PYPI_USERNAME }}
          password: ${{ env.PYPI_PASSWORD }}
          packages-dir: ${{github.workspace}}/sdk/python/bin/dist
      - if: ${{ matrix.language == 'nodejs' && env.PUBLISH_NPM == 'true' }}
        uses: JS-DevTools/npm-publish@v1
        with:
          access: "public"
          token: ${{ env.NPM_TOKEN }}
          package: ${{github.workspace}}/sdk/nodejs/bin/package.json
      - if: ${{ matrix.language == 'dotnet' && env.PUBLISH_NUGET == 'true' }}
        name: publish nuget package
        run: |
          dotnet nuget push ${{github.workspace}}/sdk/dotnet/bin/Debug/*.nupkg -s ${{ env.NUGET_FEED_URL }} -k ${{ env.NUGET_PUBLISH_KEY }}
          echo "done publishing packages"
    strategy:
      fail-fast: true
      matrix:
        language:
          - nodejs
          #- python
          #- dotnet
          - go
